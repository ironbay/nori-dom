{"id":"node_modules/@ironbay/riptide/lib/client.js","dependencies":[{"name":"/home/dax/dev/projects/nori/example/client/node_modules/@ironbay/riptide/lib/client.js.map","includedInParent":true,"mtime":499162500000},{"name":"/home/dax/dev/projects/nori/example/client/node_modules/@ironbay/riptide/src/client.ts","includedInParent":true,"mtime":499162500000},{"name":"/home/dax/dev/projects/nori/example/client/package.json","includedInParent":true,"mtime":1538872001934},{"name":"/home/dax/dev/projects/nori/example/client/node_modules/@ironbay/riptide/package.json","includedInParent":true,"mtime":1538870665234},{"name":"./sleep","loc":{"line":38,"column":22},"parent":"/home/dax/dev/projects/nori/example/client/node_modules/@ironbay/riptide/lib/client.js","resolved":"/home/dax/dev/projects/nori/example/client/node_modules/@ironbay/riptide/lib/sleep.js"},{"name":"./dispatcher","loc":{"line":39,"column":27},"parent":"/home/dax/dev/projects/nori/example/client/node_modules/@ironbay/riptide/lib/client.js","resolved":"/home/dax/dev/projects/nori/example/client/node_modules/@ironbay/riptide/lib/dispatcher.js"}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sleep_1 = require(\"./sleep\");\nvar dispatcher_1 = require(\"./dispatcher\");\nvar Client = /** @class */ (function () {\n    function Client(transport, format) {\n        if (transport === void 0) { transport = null; }\n        if (format === void 0) { format = null; }\n        var _this = this;\n        this.counter = 0;\n        this.on_cast = new dispatcher_1.default();\n        this.private = new Map();\n        this.transport = new transport();\n        this.transport.subscribe(function (data) { return _this.handle_data(data); });\n        this.format = new format();\n    }\n    Client.prototype.call = function (action, body) {\n        return __awaiter(this, void 0, void 0, function () {\n            var promise;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.counter++;\n                        promise = new Promise(function (resolve, reject) {\n                            _this.private.set(_this.counter, { resolve: resolve, reject: reject });\n                        });\n                        return [4 /*yield*/, this.write({\n                                key: this.counter,\n                                action: action,\n                                body: body,\n                                type: 'call'\n                            })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, promise];\n                }\n            });\n        });\n    };\n    Client.prototype.cast = function (action, body) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.write({\n                            action: action,\n                            body: body,\n                            type: 'cast'\n                        })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Client.prototype.write = function (msg) {\n        return __awaiter(this, void 0, void 0, function () {\n            var encoded, ex_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        msg.version = 1;\n                        encoded = this.format.encode(msg);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 2, , 5]);\n                        this.transport.write(encoded);\n                        return [3 /*break*/, 5];\n                    case 2:\n                        ex_1 = _a.sent();\n                        return [4 /*yield*/, sleep_1.default(1000)];\n                    case 3:\n                        _a.sent();\n                        return [4 /*yield*/, this.write(msg)];\n                    case 4: return [2 /*return*/, _a.sent()];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Client.prototype.handle_data = function (data) {\n        var msg = this.format.decode(data);\n        var match = this.private.get(msg.key);\n        switch (msg.action) {\n            case 'reply':\n                match.resolve(msg.body);\n                this.private.delete(msg.key);\n            case 'error':\n                match.reject(msg.body);\n                this.private.delete(msg.key);\n            default:\n                this.on_cast.trigger(msg);\n        }\n    };\n    return Client;\n}());\nexports.default = Client;\n","map":{"version":3,"file":"client.js","sourceRoot":"","sources":["../src/client.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iCAA2B;AAC3B,2CAAqC;AAErC;IAOI,gBAAY,SAA8B,EAAE,MAA2B;QAA3D,0BAAA,EAAA,gBAA8B;QAAE,uBAAA,EAAA,aAA2B;QAAvE,iBAIC;QARM,YAAO,GAAW,CAAC,CAAA;QACnB,YAAO,GAAG,IAAI,oBAAU,EAAmB,CAAA;QAC1C,YAAO,GAAG,IAAI,GAAG,EAAyC,CAAA;QAG9D,IAAI,CAAC,SAAS,GAAG,IAAI,SAAS,EAAE,CAAA;QAChC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAtB,CAAsB,CAAC,CAAA;QACxD,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,EAAE,CAAA;IAC9B,CAAC;IAEK,qBAAI,GAAV,UAAc,MAAc,EAAE,IAAS;;;;;;;wBACnC,IAAI,CAAC,OAAO,EAAE,CAAA;wBACR,OAAO,GAAG,IAAI,OAAO,CAAI,UAAC,OAAO,EAAE,MAAM;4BAC3C,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,OAAO,EAAE,EAAE,OAAO,SAAA,EAAE,MAAM,QAAA,EAAE,CAAC,CAAA;wBACvD,CAAC,CAAC,CAAA;wBACF,qBAAM,IAAI,CAAC,KAAK,CAAC;gCACb,GAAG,EAAE,IAAI,CAAC,OAAO;gCACjB,MAAM,QAAA;gCACN,IAAI,MAAA;gCACJ,IAAI,EAAE,MAAM;6BACf,CAAC,EAAA;;wBALF,SAKE,CAAA;wBACF,sBAAO,OAAO,EAAA;;;;KACjB;IAEK,qBAAI,GAAV,UAAW,MAAc,EAAE,IAAS;;;;4BAChC,qBAAM,IAAI,CAAC,KAAK,CAAC;4BACb,MAAM,QAAA;4BACN,IAAI,MAAA;4BACJ,IAAI,EAAE,MAAM;yBACf,CAAC,EAAA;;wBAJF,SAIE,CAAA;;;;;KAEL;IAEa,sBAAK,GAAnB,UAAoB,GAAoB;;;;;;wBACpC,GAAG,CAAC,OAAO,GAAG,CAAC,CAAA;wBACT,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;;;;wBAEnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA;;;;wBAE7B,qBAAM,eAAK,CAAC,IAAI,CAAC,EAAA;;wBAAjB,SAAiB,CAAA;wBACV,qBAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAA;4BAA5B,sBAAO,SAAqB,EAAA;;;;;KAGnC;IAEO,4BAAW,GAAnB,UAAoB,IAAY;QAC5B,IAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAkB,IAAI,CAAC,CAAA;QACrD,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;QACvC,QAAQ,GAAG,CAAC,MAAM,EAAE;YAChB,KAAK,OAAO;gBACR,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;gBACvB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;YAChC,KAAK,OAAO;gBACR,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;gBACtB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;YAChC;gBACI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;SAChC;IACL,CAAC;IAEL,aAAC;AAAD,CAAC,AA/DD,IA+DC","sourcesContent":["import sleep from './sleep'\nimport Dispatcher from './dispatcher'\n\nexport default class Client<T extends Riptide.Transport, F extends Riptide.Format> {\n    public transport: T\n    public format: F\n    public counter: number = 0\n    public on_cast = new Dispatcher<Riptide.Message>()\n    private private = new Map<number, { resolve: any, reject: any }>()\n\n    constructor(transport: { new(): T } = null, format: { new(): F } = null) {\n        this.transport = new transport()\n        this.transport.subscribe(data => this.handle_data(data))\n        this.format = new format()\n    }\n\n    async call<T>(action: string, body: any) {\n        this.counter++\n        const promise = new Promise<T>((resolve, reject) => {\n            this.private.set(this.counter, { resolve, reject })\n        })\n        await this.write({\n            key: this.counter,\n            action,\n            body,\n            type: 'call'\n        })\n        return promise\n    }\n\n    async cast(action: string, body: any) {\n        await this.write({\n            action,\n            body,\n            type: 'cast'\n        })\n\n    }\n\n    private async write(msg: Riptide.Message) {\n        msg.version = 1\n        const encoded = this.format.encode(msg)\n        try {\n            this.transport.write(encoded)\n        } catch (ex) {\n            await sleep(1000)\n            return await this.write(msg)\n        }\n\n    }\n\n    private handle_data(data: string) {\n        const msg = this.format.decode<Riptide.Message>(data)\n        const match = this.private.get(msg.key)\n        switch (msg.action) {\n            case 'reply':\n                match.resolve(msg.body)\n                this.private.delete(msg.key)\n            case 'error':\n                match.reject(msg.body)\n                this.private.delete(msg.key)\n            default:\n                this.on_cast.trigger(msg)\n        }\n    }\n\n}\n\n"]}},"hash":"8e6cc93b6c50eb9eb4d89ae4d27c426b","cacheData":{"env":{}}}